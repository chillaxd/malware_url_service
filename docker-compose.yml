version: '3'

services:
  redis_master_service:
    image: redis:4.0.11-alpine3.8
    volumes:
    - ~/redis_data:/data
    sysctls:
      net.core.somaxconn: 5000
  redis_slave_service:
    image: redis:4.0.11-alpine3.8
    volumes:
    - ~/redis_data:/data
    command: redis-server --slaveof redis-master 6379
    sysctls:
      net.core.somaxconn: 5000
    links:
      - redis_master_service:redis-master
  redis_sentinel_service:
    build: ./redis-sentinel
    environment:
    - SENTINEL_DOWN_AFTER=5000
    - SENTINEL_FAILOVER=5000
    - SENTINEL_MASTER_NAME=malware_detector_redis_master
    sysctls:
      net.core.somaxconn: 5000
    links:
    - redis_master_service:redis-master
    - redis_slave_service

  url_service:
    build: ./detector
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
        max_attempts: 3
        window: 120s
    environment:
    - SENTINEL_MASTER_NAME=malware_detector_redis_master
    - SENTINEL_PREFIX=malware_url_detector_redis_sentinel_service
    - SENTINEL_PORT=26379
    labels:
      - "traefik.backend=url_service"
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:localhost"
      - "traefik.port=8008"
    depends_on:
      - redis_sentinel_service

  proxy_service:
    image: traefik:v1.7.0-rc5-alpine
    command: --api --docker
    depends_on:
      - url_service
    environment:
      - BALANCE=leastconn
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "80:80"
      - "8080:8080"
    deploy:
      restart_policy:
        condition: on-failure
